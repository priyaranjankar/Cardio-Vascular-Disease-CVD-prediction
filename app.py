# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

"""

import streamlit as st
import pandas as pd
import pickle

# Load the saved model
with open('model.pkl', 'rb') as file:
    model = pickle.load(file)

# Define the prediction function
def predict(model, df):
    # Make a prediction
    y_pred = model.predict(df)
    # Return the prediction
    return y_pred

# Define the Streamlit app
def app():
    # Set the title and description of the app
    st.title('Cardiovascular Disease Prediction App')
    st.markdown('This app predicts the likelihood of cardiovascular disease based on various factors.')
    
    # Create a file uploader for the CSV data
    st.sidebar.title('Upload CSV Data')
    uploaded_file = st.sidebar.file_uploader(label='Choose a CSV file', type=['csv'])
    if uploaded_file is not None:
        # Read the CSV data
        delimiter = st.sidebar.text_input('Delimiter', ';')
        try:
            df = pd.read_csv(uploaded_file, delimiter=delimiter)
        except:
            st.sidebar.error('Invalid delimiter')
            return
        # Remove the 'id' column
        df.drop('id', axis=1, inplace=True)
        # Make a prediction
        y_pred = predict(model, df)
        # Show the prediction
        st.subheader('Prediction Results')
        st.write(y_pred)
    
    # Create manual input fields for the features
    st.sidebar.title('Or Enter Values Manually')
    age = st.sidebar.number_input('Age')
    gender = st.sidebar.selectbox('Gender', options=['Male', 'Female'])
    if gender == 'Male':
        gender = 2
    else:
        gender = 1
    height = st.sidebar.number_input('Height (cm)')
    weight = st.sidebar.number_input('Weight (kg)')
    ap_hi = st.sidebar.number_input('Systolic blood pressure (mmHg)')
    ap_lo = st.sidebar.number_input('Diastolic blood pressure (mmHg)')
    cholesterol = st.sidebar.selectbox('Cholesterol level', options=['Normal', 'Above normal', 'Well above normal'])
    if cholesterol == 'Normal':
        cholesterol = 1
    elif cholesterol == 'Above normal':
        cholesterol = 2
    else:
        cholesterol = 3
    gluc = st.sidebar.selectbox('Glucose level', options=['Normal', 'Above normal', 'Well above normal'])
    if gluc == 'Normal':
        gluc = 1
    elif gluc == 'Above normal':
        gluc = 2
    else:
        gluc = 3
    smoke = st.sidebar.selectbox('Do you smoke?', options=['No', 'Yes'])
    if smoke == 'No':
        smoke = 0
    else:
        smoke = 1
    alco = st.sidebar.selectbox('Do you drink alcohol?', options=['No', 'Yes'])
    if alco == 'No':
        alco = 0
    else:
        alco = 1
    active = st.sidebar.selectbox('Do you exercise regularly?', options=['No', 'Yes'])
    if active == 'No':
        active = 0
    else:
        active = 1
    # Make a prediction based on the manual input fields
    if st.sidebar.button('Predict'):
        df = pd.DataFrame({'age': [age], 'gender': [gender], 'height': [height], 'weight': [weight], 
                           'ap_hi': [ap_hi], 'ap_lo': [ap_lo], 'cholesterol':



